---
description: Detailed steps for template setup workflow when initializing a project
alwaysApply: true
---

# Template Setup Workflow

## Agent-Driven Initialization
When a user prompts "initialize this project as <my project name>", I will **ONLY** handle template setup (do NOT include TaskMaster or PRD work):

1. **Copy `.cursor/.mcp.json.example` to `.cursor/mcp.json`** and prompt user for their API keys
2. **Remove template-specific content** and customize for their project:
   - **Move `README.md` to `docs/how_to_use_this_template.md`** to preserve template documentation
   - **Copy `.cursor/templates/project_readme.md` to the project root as `README.md`** to create the new project-specific README
   - **Update the new `README.md`** by replacing `[Project Name]` placeholder with user-provided name or "My Project"
   - Update `SECURITY.md` to remove template references
   - Remove or update any hardcoded paths in configuration files

## What NOT to Include in Template Initialization
- **Do NOT set up TaskMaster** - This is a separate workflow that requires explicit user request
- **Do NOT create PRDs** - Project Requirements Documents are separate from template setup
- **Do NOT copy `.env.example` to `.env`** - Only do this if user specifically requests TaskMaster CLI setup
- **Do NOT initialize git repository** - Template initialization is separate from git setup
- **Do NOT create tasks or project management files** - Focus only on template structure

## Environment File Distinction
- **Template `.env.example`**: Contains TaskMaster CLI configuration (ANTHROPIC_API_KEY, PERPLEXITY_API_KEY, etc.)
- **Project `.env`**: Will contain application-specific configuration (database URLs, app API keys, etc.)
- **Never mix these**: TaskMaster configuration is separate from project application configuration

## After Template Initialization
Template initialization is complete after customizing the project files. TaskMaster, PRD creation, and git setup are separate workflows that require explicit user requests.

### Final Step: Remove from Context Window
After completing template initialization, update this rule file to stop consuming context space:
- **Change `alwaysApply: true` to `alwaysApply: false`** in the frontmatter of `.cursor/rules/template_setup.mdc`
- This prevents the detailed template setup instructions from taking up context window space after the one-time setup is complete
